# If zsh was built locally, source the fzf.zsh.
# If installed using a package manager this is redundant
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Set up fzf key bindings
source <(fzf --zsh)

# Git

# Compare the current branch against another branch
# Pass in the branch you want to compare to, i.e. `gcmp origin/main`
alias glog='git log --oneline --decorate --graph HEAD'

alias config='$GIT_BIN --git-dir=$HOME/.cfg/ --work-tree=$HOME'

# Add nvim to path
export PATH="$(dirname $NVIM_BIN):$PATH"
export EDITOR="$NVIM_BIN"
export SUDO_EDITOR="$NVIM_BIN"
export GIT_EDITOR="$NVIM_BIN"
export VISUAL="$NVIM_BIN"

# fzf
alias fzn='nvim $(fzf)'

# Zoxide
eval "$(zoxide init zsh)"

alias cd="z"

# Copy terminal info to ssh target.
# See https://ghostty.org/docs/help/terminfo#copy-ghostty's-terminfo-to-a-remote-machine
function ghossh() { infocmp -x | ssh $@ -- tic -x - ;}

# Send a push notifcation with Pushover
function push {
  curl \
    -F "token=${PUSHOVER_API_TOKEN}" \
    -F "user=${PUSHOVER_USER_TOKEN}" \
    -F "title=$1" \
    -F "message=$2" \
    https://api.pushover.net/1/messages.json
}

# FZF completion for git checkout (gco) command

function get_recent_branches() {
    git for-each-ref --count 100 --sort=-committerdate refs/heads/ --format='%(refname:short)'
}

function _fzf_complete_gco() {
    local opts="--layout reverse"
    _fzf_complete "$opts" "$@" < <(get_recent_branches)
}
